#! /usr/bin/env python
#Autogenerated V4L Dynamic Control

PACKAGE='v4l_cam'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
gen = ParameterGenerator()

gen.add("show_camera_image", bool_t, 0, "Show camera image", True)
enum_load_save_camera_parameters = gen.enum([gen.const("NA", int_t, 0, "Do nothing"),  gen.const("load", int_t, 1, "Load file"),  gen.const("save", int_t, 2, "Save file")], "Load / Save camera parameters")
gen.add("camera_control_action", int_t, 0, "Load / Save camera parameters", 0, 0, 2, edit_method=enum_load_save_camera_parameters)
gen.add("camera_parameters_file", str_t, 0, "File to load/save parameters", "cfg/CameraParameters.txt")
enum_convert_image = gen.enum([gen.const("raw_data", int_t, 0, "raw camera Data"),  gen.const("YUV422toRGB", int_t, 1, "converts image to rgb first"),  gen.const("YUV422toBRG", int_t, 2, "converts image to bgr first"),  gen.const("YUV422toGray", int_t, 3, "converts image to gray first")], "Convert image")
gen.add("convert_image_first", int_t, 0, "Convets the raw image first to an other format", 2, 0, 3, edit_method=enum_convert_image)

#Autogenerated Controls

gen.add("brightness", int_t, 0, "Brightness", 128, 0, 255)
gen.add("contrast", int_t, 0, "Contrast", 32, 0, 255)
gen.add("saturation", int_t, 0, "Saturation", 32, 0, 255)
gen.add("white_balance_temperature_auto", bool_t, 0, "White Balance Temperature, Auto", True)
gen.add("gain", int_t, 0, "Gain", 0, 0, 255)
enum_power_line_frequency = gen.enum([gen.const("Disabled", int_t, 0, "Disabled"), gen.const("50_Hz", int_t, 1, "50 Hz"), gen.const("60_Hz", int_t, 2, "60 Hz")], "Power Line Frequency")
gen.add("power_line_frequency", int_t, 0, "Power Line Frequency", 2, 0, 2, edit_method=enum_power_line_frequency)
gen.add("white_balance_temperature", int_t, 0, "White Balance Temperature", 4000, 0, 10000)
gen.add("sharpness", int_t, 0, "Sharpness", 224, 0, 255)
gen.add("backlight_compensation", int_t, 0, "Backlight Compensation", 1, 0, 2)
enum_exposure_auto = gen.enum([gen.const("Unkown0", int_t, 0, "Unkown"), gen.const("Manual_Mode", int_t, 1, "Manual Mode"), gen.const("Unkown2", int_t, 2, "Unkown"), gen.const("Aperture_Priority_Mode", int_t, 3, "Aperture Priority Mode")], "Exposure, Auto")
gen.add("exposure_auto", int_t, 0, "Exposure, Auto", 3, 0, 3, edit_method=enum_exposure_auto)
gen.add("exposure_absolute", int_t, 0, "Exposure (Absolute)", 166, 1, 10000)
gen.add("exposure_auto_priority", bool_t, 0, "Exposure, Auto Priority", False)
gen.add("focus", int_t, 0, "Focus", 0, 0, 255)
gen.add("led1_mode", int_t, 0, "LED1 Mode", 3, 0, 132)
gen.add("led1_frequency", int_t, 0, "LED1 Frequency", 0, 0, 255)
gen.add("disable_video_processing", bool_t, 0, "Disable video processing", False)
gen.add("raw_bits_per_pixel", int_t, 0, "Raw bits per pixel", 0, 0, 1)

exit(gen.generate(PACKAGE, "v4l_cam", "CameraParameters"))
