#! /usr/bin/env python
#Autogenerated V4L Dynamic Control

PACKAGE='v4l_cam'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
gen = ParameterGenerator()

gen.add("show_camera_image", bool_t, 0, "Show camera image", True)
enum_load_save_camera_parameters = gen.enum([gen.const("NA", int_t, 0, "Do nothing"),
  gen.const("load", int_t, 1, "Load file"),
  gen.const("save", int_t, 2, "Save file")], "Load / Save camera parameters")
gen.add("load_save_camera_parameters", int_t, 0, "Load / Save camera parameters", 0, 0, 2, edit_method=enum_load_save_camera_parameters)
gen.add("camera_parameters_file", str_t, 0, "File to load/save parameters", "cfg/CameraParameters.txt")
enum_convert_image = gen.enum([gen.const("raw_data", int_t, 0, "raw camera Data"),  gen.const("YUV422toRGB", int_t, 1, "converts image to rgb first"),  gen.const("YUV422toBRG", int_t, 2, "converts image to bgr first"),  gen.const("YUV422toGray", int_t, 3, "converts image to gray first")], "Load / Save camera parameters")
gen.add("convert_image_first", int_t, 0, "Convets the raw image first to an other format", 2, 0, 3, edit_method=enum_convert_image)

gen.add("brightness", int_t, 0, "Brightness", 128, 0, 255)
gen.add("contrast", int_t, 0, "Contrast", 32, 0, 255)
gen.add("saturation", int_t, 0, "Saturation", 32, 0, 255)

exit(gen.generate(PACKAGE, "v4l_cam", "CameraParameters"))
